{"version":3,"sources":["Context/ToDoContext.js","Context/actions.types.js","Context/reducers.js","Components/TodoForm.js","Components/Todos.js","App.js","index.js"],"names":["TodoContext","createContext","ADD_TODO","REMOVE_TODO","RENAME_TODO","todoReducer","state","action","type","payload","filter","todo","id","todoString","TodoForm","useState","setTodoString","dispatch","useContext","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","Todos","todos","showRenameBox","setShowRenameBox","currTodo","setCurrTodo","ListGroup","className","map","ListGroupItem","onClick","App","useReducer","Provider","Container","fluid","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8KACaA,G,MAAcC,2B,QCDdC,EAAW,WACXC,EAAc,cACdC,EAAc,cCmBZC,EAnBK,SAACC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,KAAKN,EACH,MAAM,GAAN,mBAAWI,GAAX,CAAkBC,EAAOE,UAC3B,KAAKN,EACH,OAAOG,EAAMI,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOL,EAAOE,WACnD,KAAKL,EACH,OAAOE,EAAMI,QAAO,SAACC,GACnB,OAAGA,EAAKC,KAAKL,EAAOE,QAAQG,IAC1BD,EAAKE,WAAWN,EAAOE,QAAQI,WACxBF,GAEGA,KAEhB,QACE,OAAOL,I,+DCkCEQ,EAtCE,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACdF,EADc,KACFG,EADE,KAEbC,EAAaC,qBAAWlB,GAAxBiB,SAgBR,OACE,cAACE,EAAA,EAAD,CAAMC,SAhBa,SAACC,GAEpB,GADAA,EAAEC,iBACiB,KAAfT,EACF,OAAOU,MAAM,uBAEf,IAAMZ,EAAO,CACXE,aACAD,GAAIY,eAENP,EAAS,CACPT,KAAMN,EACNO,QAASE,IAEXK,EAAc,KAGd,SACE,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,OACLhB,GAAG,OACHiB,YAAY,iBACZC,MAAOjB,EACPkB,SAAU,SAACV,GAAD,OAAOL,EAAcK,EAAEW,OAAOF,YAG5C,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAd,yB,wBC4BKC,EAnED,WAAO,IAAD,EACUnB,qBAAWlB,GAA/BsC,EADU,EACVA,MAAOrB,EADG,EACHA,SADG,EAEqBF,mBAAS,GAF9B,mBAEXwB,EAFW,KAEGC,EAFH,OAGWzB,mBAAS,IAHpB,mBAGX0B,EAHW,KAGFC,EAHE,KAelB,OACE,gCACoB,IAAhBH,GACE,eAACpB,EAAA,EAAD,CAAMC,SAdO,WACnBH,EAAS,CACPT,KAAMJ,EACNK,QAAS,CACPG,GAAG6B,EAAS7B,GACZC,WAAW4B,EAAS5B,cAGxB2B,EAAiB,GACjBE,EAAY,KAKN,UACI,cAACf,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,OACLhB,GAAG,OACHiB,YAAY,iBACZC,MAAOW,EAAS5B,WAChBkB,SAAU,SAACV,GAAD,OAAOqB,EAAY,2BAAID,GAAL,IAAc5B,WAAWQ,EAAEW,OAAOF,YAEhE,cAACK,EAAA,EAAD,CAAQC,MAAM,UAAd,uBAGV,cAACO,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACGN,EAAMO,KAAI,SAAClC,GACV,OAGE,eAACmC,EAAA,EAAD,WACGnC,EAAKE,WACN,sBAAM+B,UAAU,eAAhB,SACE,wBACEG,QAAS,WACPP,EAAiB,GACjBE,EAAY/B,IAHhB,sBASF,sBAAMiC,UAAU,mBAAhB,SACE,wBACEG,QAAS,WACP9B,EAAS,CACPT,KAAML,EACNM,QAASE,EAAKC,MAJpB,uBAbgBD,EAAKC,aCjCpB,SAASoC,IAAO,IAAD,EACFC,qBAAW5C,EAAa,IADtB,mBACrBiC,EADqB,KACdrB,EADc,KAE5B,OACE,cAACjB,EAAYkD,SAAb,CAAsBpB,MAAO,CAAEQ,QAAOrB,YAAtC,SACE,eAACkC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,2DACA,cAAC,EAAD,IACA,cAAC,EAAD,SCVR,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACT,EAAD,MAEFK,K","file":"static/js/main.82a5bf64.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport const TodoContext = createContext();\n","export const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const RENAME_TODO = \"RENAME_TODO\";","import { ADD_TODO, REMOVE_TODO,RENAME_TODO } from \"./actions.types\";\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, action.payload];\n    case REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.payload);\n    case RENAME_TODO:\n      return state.filter((todo) => {\n        if(todo.id===action.payload.id){\n          todo.todoString=action.payload.todoString;\n          return todo;\n        }\n        else return todo;\n      })\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n","import React, { useState, useContext } from \"react\";\nimport \"../styles.css\";\nimport {\n  FormGroup,\n  Button,\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\nimport { v4 } from \"uuid\";\nimport { TodoContext } from \"../Context/ToDoContext\";\nimport { ADD_TODO } from \"../Context/actions.types\";\nconst TodoForm = () => {\n  const [todoString, setTodoString] = useState(\"\");\n  const { dispatch } = useContext(TodoContext);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todoString === \"\") {\n      return alert(\"please enter a todo\");\n    }\n    const todo = {\n      todoString,\n      id: v4()\n    };\n    dispatch({\n      type: ADD_TODO,\n      payload: todo\n    });\n    setTodoString(\"\");\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormGroup>\n        <InputGroup>\n          <Input\n            type=\"text\"\n            name=\"todo\"\n            id=\"todo\"\n            placeholder=\"your next todo\"\n            value={todoString}\n            onChange={(e) => setTodoString(e.target.value)}\n          />\n        </InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <Button color=\"warning\">Add</Button>\n        </InputGroupAddon>\n      </FormGroup>\n    </Form>\n  );\n};\nexport default TodoForm;\n","import React, { useContext, useState } from \"react\";\nimport { Button, Form, Input, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { REMOVE_TODO,RENAME_TODO } from \"../Context/actions.types\";\nimport { TodoContext } from \"../Context/ToDoContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Todos = () => {\n  const { todos, dispatch } = useContext(TodoContext);\n  const [showRenameBox,setShowRenameBox]=useState(0);\n  const [currTodo,setCurrTodo]=useState('');\n  const handleSubmit = () => {\n    dispatch({\n      type: RENAME_TODO,\n      payload: {\n        id:currTodo.id,\n        todoString:currTodo.todoString\n      }\n    });\n    setShowRenameBox(0);\n    setCurrTodo('');\n  }\n  return (\n    <div>\n      { showRenameBox===1 && \n          <Form onSubmit={handleSubmit}>\n              <Input\n                type=\"text\"\n                name=\"todo\"\n                id=\"todo\"\n                placeholder=\"your next todo\"\n                value={currTodo.todoString}\n                onChange={(e) => setCurrTodo({...currTodo,todoString:e.target.value})}\n              />\n              <Button color=\"warning\">Rename</Button>\n        </Form>  \n      }\n    <ListGroup className=\"mt-5 mb-2 items\">\n      {todos.map((todo) => {\n        return (\n    \n\n          <ListGroupItem key={todo.id}>\n            {todo.todoString}\n            <span className=\"float-right \">\n              <button\n                onClick={() => {\n                  setShowRenameBox(1);\n                  setCurrTodo(todo);\n                }}\n              >\n                  Rename\n              </button>\n            </span>\n            <span className=\"float-right mr-3\">\n              <button\n                onClick={() => {\n                  dispatch({\n                    type: REMOVE_TODO,\n                    payload: todo.id\n                  });\n                }}\n              >\n                check\n              </button>\n            </span>\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  </div>\n  );\n};\n\nexport default Todos;\n","import \"./styles.css\";\nimport { useReducer } from \"react\";\nimport { Container } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { TodoContext } from \"./Context/ToDoContext\";\nimport todoReducer from \"./Context/reducers\";\nimport TodoForm from \"./Components/TodoForm\";\nimport Todos from \"./Components/Todos\";\nexport default function App() {\n  const [todos, dispatch] = useReducer(todoReducer, []);\n  return (\n    <TodoContext.Provider value={{ todos, dispatch }}>\n      <Container fluid>\n        <h1>Todo App With Context API</h1>\n        <Todos />\n        <TodoForm />\n      </Container>\n    </TodoContext.Provider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}